version: '3.8'

services:
  server:
    build: ./apps/server
    ports:
      - '3012:3012'
    environment:
      - NODE_ENV=production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - SENTRY_DSN=${SENTRY_DSN}
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:3012/health']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - ./logs:/app/logs
    depends_on:
      - otel-collector
    networks:
      - handler-network

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    depends_on:
      - server
    ports:
      - '3011:3011'
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:3011']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - handler-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.docker.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - handler-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3013:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - handler-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ['--config=/etc/otel-collector-config.yml']
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - '4317:4317' # OTLP gRPC receiver
      - '4318:4318' # OTLP HTTP receiver
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - handler-network

volumes:
  prometheus_data:
  grafana_data:
  grafana-storage:

networks:
  handler-network:
    driver: bridge
